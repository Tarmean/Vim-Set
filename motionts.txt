
<Cursor These screen, 'scrolloff' 1. 2. 3. 4. 5. 6. 7. 8. 9. General If | the Vim Experienced their know at The positions ============================================================================== 1. The operate position or If the After that moves The and (are characterwise). A start exclusive, Linewise Which command. 1. 2. Note motion Instead mode: text start be strokes | You But This This Note FORCING When type Example: deletes deletes deletes Be blockwise, v V CTRL-V ============================================================================== 2. These They may commands h <Left> CTRL-H <BS> l <Right> <Space> 0 <Home> ^ $ g_ g0 g^ gm g$ | f{char} F{char} t{char} T{char} ; , ============================================================================== 3. k <Up> CTRL-P j <Down> CTRL-J <NL> CTRL-N gk g<Up> gj g<Down> - + CTRL-M <CR> _ G <C-End> <C-Home> gg :[range] {count}% :[range]go[to] [count]go These or (if except character If lines error. ============================================================================== 4. <S-Right> w <C-Right> W e E <S-Left> b <C-Left> B ge gE These A sequence tabs, is A space. A " a WORD Special on word followed bug, Another operator that next The will But same, between ============================================================================== 5. ( ) { } ]] ][ [[ [] These A end and tabs boundary. If follow The A paragraph option. the the Note boundary. Also the paragraph A a 'sections' start The useful first second If and [type ============================================================================== 6. This after including without always These These disabled Also aw iw aW iW as is ap ip a] a[ i] i[ a) a( ab i) i( ib a> a< i> i< at it a} a{ aB i} i{ iB a a' a` i i' i` When For For When When When For objects. movement Note movement takes where deletes the Tag For matching there The the the on " matter. In matching The ============================================================================== 7. Jumping 1. 2. m{a-zA-Z} m' m[ m< :[range]ma[rk] :[range]k{a-zA-Z'} '{a-z} '{A-Z0-9} g'{mark} < :marks :marks < :delm[arks] < :delm[arks]! A remembered. unrelated. 'a 'A '0 Lowercase buffer lost. Lowercase deletes Top, redo. Uppercase can with mark a the Numbered They is time, Numbered '[ '] After that sometimes character. After inserting inserted Note: when was '< '> '' ' '^ '. '( ') '{ '} These ]' ]` [' [` :loc[kmarks] :kee[pmarks] :keepj[umps] < ============================================================================== 8. A " the with remembered. unless CTRL-O <Tab> CTRL-I :ju[mps] Jumps can move The {not For The in in You cursor The command entry you will back With you column this If the The only When jumplist. command. that After jump The if When If stored CHANGE When remembered previous also g; g, When use remembered. as When than sequence to also bytes for Note a been When remembered. :changes ============================================================================== 9. % [( [{ ]) ]} The code end Very bring ]m ]M [m [M The The is file Starting the method Using [# ]# These constructs. the [ ] H M L LeftMouse> 






